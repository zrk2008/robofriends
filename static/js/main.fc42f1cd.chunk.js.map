{"version":3,"sources":["components/searchbox.js","components/card.js","components/cardlist.js","components/scroll.js","components/errorboundry.js","containers/app.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","cardComponent","robots","map","user","key","Scroll","props","console","log","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","React","ReactDOM","render","document","getElementById"],"mappings":"0OAgBeA,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAE9B,OACI,yBAAKC,UAAU,OACX,2BACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,MCIXK,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,yBAAKP,UAAU,oDACX,yBAAKQ,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,WACpD,6BACI,4BAAKH,GACL,2BAAIC,MCWLG,EAfE,SAAC,GAAgB,IAExBC,EAFuB,EAAbC,OAEaC,KAAI,SAAAC,GAC7B,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAKT,GAAIA,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,WAKzE,OACI,6BACKI,ICHEK,EATA,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAER,yBAAKG,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEN,EAAMO,WCJEC,E,kDAEjB,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKb,MAAMO,a,GAjBgBQ,aCMrBC,G,wDAEjB,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjC,YAAaqC,EAAMC,OAAOC,SAd1C,EAAKX,MAAQ,CACTd,OAAQ,GACRd,YAAa,IALP,E,gEASO,IAAD,OAChBwC,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEnB,OAAQ8B,S,+BAQrC,IAAD,EAC2BZ,KAAKJ,MAA7Bd,EADH,EACGA,OAAQd,EADX,EACWA,YACV6C,EAAe/B,EAAOgC,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASjD,EAAYgD,kBAEzD,OAAsB,IAAlBlC,EAAOoC,OACA,uCAGH,yBAAKhD,UAAU,MACX,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWD,aAAc+B,KAAKI,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUtB,OAAQ+B,W,GApCbM,IAAMjB,YCFvCkB,IAASC,OACT,kBAAC,EAAD,MACEC,SAASC,eAAe,U","file":"static/js/main.fc42f1cd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    const cardComponent = robots.map(user => {\r\n        return <Card key={user.id} id={user.id} name={user.name} email={user.email}/>\r\n    })\r\n    // if(true) {\r\n    //     throw new Error('NOOOOO!');\r\n    // }\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '2px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport SearchBox from '../components/searchbox';\r\nimport CardList from \"../components/cardlist\";\r\nimport Scroll from '../components/scroll';\r\nimport ErrorBoundry from \"../components/errorboundry\";\r\nimport './app.css'\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users}))\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filterRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        if (robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f2\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filterRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/app';\n\nReactDOM.render(\n<App />\n, document.getElementById('root')\n);\n\n"],"sourceRoot":""}